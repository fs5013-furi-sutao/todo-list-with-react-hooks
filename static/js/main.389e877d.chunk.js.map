{"version":3,"sources":["components/DataProvider.js","components/FormInput.js","components/ListItem.js","components/List.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["DataContext","createContext","DataProvider","props","useState","checkAll","setCheckAll","todos","setTodos","useEffect","todoStore","JSON","parse","localStorage","getItem","setItem","stringify","Provider","value","children","FormInput","useContext","todoName","setTodoName","todoInput","useRef","current","focus","autoComplete","onSubmit","e","preventDefault","name","complete","type","id","ref","required","placeholder","onChange","target","toLowerCase","ListItem","todo","checkComplete","handleEditTodos","onEdit","setOnEdit","editValue","setEditValue","onClick","handleSave","htmlFor","className","checked","disabled","List","switchComplete","newTodos","forEach","index","switchCheckAllMatchCheckboxesState","editvalue","count","countCheckedList","length","map","Footer","newTodosComplete","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.389e877d.chunk.js","sourcesContent":["import React, { useState, useEffect, createContext } from 'react'\r\n\r\nexport const DataContext = createContext();\r\n\r\nexport const DataProvider = (props) => {\r\n    const [checkAll, setCheckAll] = useState(false);\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const todoStore = JSON.parse(localStorage.getItem('todoStore'));\r\n        if (todoStore) setTodos(todoStore);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todoStore', JSON.stringify(todos));\r\n    }, [todos]);\r\n\r\n    return (\r\n        <DataContext.Provider value={[todos, setTodos, checkAll, setCheckAll]}>\r\n            {props.children}\r\n        </DataContext.Provider>\r\n    )\r\n}\r\n","import React, { useState, useContext, useRef, useEffect } from 'react'\r\nimport { DataContext } from './DataProvider'\r\n\r\nexport default function FormInput() {\r\n    const [todos, setTodos] = useContext(DataContext);\r\n    const [todoName, setTodoName] = useState('');\r\n    const todoInput = useRef();\r\n\r\n    const addTodo = e => {\r\n        e.preventDefault();\r\n        setTodos([...todos, { name: todoName, complete: false }]);\r\n        setTodoName('');\r\n        todoInput.current.focus();\r\n    }\r\n\r\n    useEffect(() => {\r\n        todoInput.current.focus();\r\n    }, []);\r\n\r\n    return (\r\n        <form autoComplete=\"off\" onSubmit={addTodo}>\r\n            <input type=\"text\" name=\"todos\" id=\"todos\" ref={todoInput}\r\n                required placeholder=\"新しいタスクを登録してください\"\r\n                value={todoName} onChange={e => setTodoName(e.target.value.toLowerCase())} />\r\n\r\n            <button id=\"add\" type=\"submit\">追加</button>\r\n        </form>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function ListItem({ todo, id, checkComplete, handleEditTodos }) {\r\n    const [onEdit, setOnEdit] = useState(false);\r\n    const [editValue, setEditValue] = useState(todo.name);\r\n\r\n    const handleOnEdit = () => {\r\n        setOnEdit(true);\r\n    };\r\n\r\n    const handleSave = id => {\r\n        setOnEdit(false);\r\n        if (editValue) {\r\n            handleEditTodos(editValue, id);\r\n            return;\r\n        }\r\n        setEditValue(todo.name);\r\n    };\r\n\r\n    if (onEdit) {\r\n        return (\r\n            <li>\r\n                <input type=\"text\" id=\"editValue\" value={editValue}\r\n                    name=\"editValue\" onChange={e => setEditValue(e.target.value.toLowerCase())} />\r\n                <button onClick={() => handleSave(id)}>保存</button>\r\n            </li>\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        <li>\r\n            <label htmlFor={id} className={todo.complete ? \"active\" : \"\"}>\r\n                <input type=\"checkbox\" id={id} checked={todo.complete}\r\n                    onChange={() => checkComplete(id)} />\r\n                {todo.name}\r\n            </label>\r\n            <button id=\"edit\" disabled={todo.complete} onClick={handleOnEdit}>編集</button>\r\n        </li>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport ListItem from './ListItem'\r\nimport { DataContext } from './DataProvider'\r\n\r\nexport default function List() {\r\n    const [todos, setTodos, checkAll, setCheckAll] = useContext(DataContext);\r\n\r\n    const switchComplete = id => {\r\n        const newTodos = [...todos];\r\n        newTodos.forEach((todo, index) => {\r\n            if (index === id) {\r\n                todo.complete = !todo.complete;\r\n            }\r\n        });\r\n        switchCheckAllMatchCheckboxesState();\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const handleEditTodos = (editvalue, id) => {\r\n        const newTodos = [...todos];\r\n        newTodos.forEach((todo, index) => {\r\n            if (index === id) {\r\n                todo.name = editvalue;\r\n            }\r\n        });\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const countCheckedList = () => {\r\n        const newTodos = [...todos];\r\n        let count = 0;\r\n        newTodos.forEach((todo) => {\r\n            if (todo.complete) {\r\n                count++;\r\n            }\r\n        });\r\n        return count;\r\n    };\r\n\r\n    const switchCheckAllMatchCheckboxesState = () => {\r\n        if (countCheckedList() === todos.length) {\r\n            setCheckAll(true);\r\n            return;\r\n        }\r\n        setCheckAll(false);\r\n    };\r\n\r\n    return (\r\n        <ul>\r\n            {\r\n                todos.map((todo, index) => (\r\n                    <ListItem todo={todo} key={index} id={index}\r\n                        checkComplete={switchComplete} handleEditTodos={handleEditTodos} />\r\n                ))\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { DataContext } from './DataProvider'\r\n\r\nexport default function Footer() {\r\n    const [todos, setTodos, checkAll, setCheckAll] = useContext(DataContext);\r\n\r\n    const handleCheckAll = () => {\r\n        const newTodos = [...todos];\r\n        newTodos.forEach(todo => {\r\n            todo.complete = !checkAll;\r\n        });\r\n        setTodos(newTodos);\r\n        setCheckAll(!checkAll);\r\n    }\r\n\r\n    const newTodosComplete = () => {\r\n        return todos.filter(todo => todo.complete === false);\r\n    };\r\n\r\n    const deleteTodo = () => {\r\n        setTodos(newTodosComplete());\r\n        setCheckAll(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                todos.length === 0 ? <h2>おめでとう！ タスクがなくなりました</h2>\r\n                    : <div className=\"row\">\r\n                        <label htmlFor=\"all\">\r\n                            <input type=\"checkbox\" name=\"all\" id=\"all\"\r\n                                onChange={handleCheckAll} checked={checkAll} />\r\n                            すべて\r\n                        </label>\r\n                        <p>{newTodosComplete().length}個の ToDo があります</p>\r\n                        <button id=\"delete\" onClick={deleteTodo}>削除</button>\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import FormInput from \"./components/FormInput\";\nimport List from \"./components/List\";\nimport Footer from \"./components/Footer\";\nimport { DataProvider } from \"./components/DataProvider\";\n\nfunction App() {\n  return (\n    <DataProvider>\n      <div className=\"App\">\n        <h1>To Do リスト</h1>\n        <FormInput />\n        <List />\n        <Footer />\n      </div>\n    </DataProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}